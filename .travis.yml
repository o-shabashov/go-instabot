language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip.
go:
  - 1.9
  - master

# Skip the install step. Don't `go get` dependencies. Only build with the
# code in vendor/
install: false

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

notifications:
  email: false
  slack:
    rooms:
      secure: QBxoL4pndpvCeeYMrNn+C6y28tOW0PDPDKASI+HaXI0wgbmngjj3MCB21zulcX2gWIhPylQ7qAFV09xhrOibZeNxlTb57PUJFGrk2jqbcuYEZtxNy2mvh34VEy+kPJYIs08BNUgUoL8EOsVxuPOJbk/uUlW2egqNL7Q2nGS3Ft2XwFwp+bkE3jDk6U5wKUG742dwx1cmsBziHz72FohmUXIZTvV7kJLr7Y+EFI+5l3KdjACYFHHvba6h7NjVwuBNaEr/pLUpRsy15ARWOZWClz+QrZxcjmelMsuf3r5Nbb+X94gEbIAKm1vTffJmjVsJVfo7bKL90fn7quuy3LWLgWfmbWAX3AbqRG/hw+3Juy4To1jcWdvzsXJ6P5CXJt9ndrkuHde3dvswYVrQhE/d25jPFSXD/1WKIB+KMr8//FG5/N88Qwqvc99P7+08Gr8INVy6mJDl8ty+PYd9lVocYiZ7s8oO2yIWhC6GUpiMHgBaBdh7j6BDfhiWCT83giCKfg2bEtnhK1jpNBncljpdUgRN3Ml+w22pPHrDudHsGvQz8EQ02vjlvNFNlahKuvrruKegqBRio6ZdDYWbDhaVln5JlG/zTkAy1TRNXdss6+ieKXlVBCbk4ZgP+WuVnYqpoTvWNVprZiS7PiGiGL6Ihqh3UqSF4w2/6zG1uQ2uxd0=

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get github.com/golang/lint/golint                        # Linter
  - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  - go get github.com/fzipp/gocyclo

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  - go vet ./...                             # go vet is the official Go static analyzer
  - megacheck ./...                          # "go vet on steroids" + linter
  - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  - golint -set_exit_status $(go list ./...) # one last linter